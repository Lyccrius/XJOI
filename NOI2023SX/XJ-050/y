        08:48 看完T1，感觉有点像dp，看T2，感觉有些不可做，于是去看T3
        08:55 看完T3，也没有想法（除了性质C），于是6pts到手（？）准备回去做T1
        由于中途不能换方向，所以可以将数由x分成两半，顺利让所有点（好似）均有了性质A
        很自然的想到一个暴力方法，把每个点分为不可到达、可到达、可出发，可停止。对于每个可到
    达的点，对右侧（左侧则反过来作一编即可）进行覆盖，覆盖的范围是此点能到达的最远的点。进行
    一点优化，只记录最大值而不是点（因为范围内都可到达），把这个点记为z。于是解决可到达这个性
    质。而对于每一条线段，如果它上面有一个点是可到达的（与[x,z]相交），且其不为终点，则这个
    线段的终点是可停止的。
        09:25 开始写T1，很显然是要排序。但是听说sort可能会n^2，于是用有点队列排。来的前一
    天在搞2020年B卷D1T3（A卷D1T1），知道这个常数大（重载可能会有影响），但是现写上，等会不
    行手写一遍。
        10:03 写完了这个比n^2稍微好一点的暴力的半部分，用样例三测试了下（因为它x=1），过了
    （超时是对的，但没到百秒证明比n^2好很多）。于是去写另一半。然而就因为这个以为对了，而实际
    上少了个条件，调了一个小时。奇！
        11:03 决定还是思考一下T1正解，发现并不需要完全枚举x~n和x～1，每次更新z后可以从z开
    始搜索。思考认为可以构造相关数据，所以还得继续优化。由于线段已经排序，所以当后缀的最小l都
    大于此时的i时就没必要继续枚举，而后缀最小值也可预处理，另一侧前缀r最大最有幸在排序中顺便预
    处理了。其实还可以叠一个优化，但是感觉意义不太大了。思考认为大概每条线段都只会被扫到一次，
    当然即使重复也是常数次。于是时间复杂度瞬间O(n)（虽然排序nlogn）。
        11:13 写完T1，大概是正解，反正四个样例都过了。目标分数大概到手2/3，感觉剩下两题可以
    放心打暴力了。测了下180ms多点过的样例四，优先队列就不手写了。
        11:29 休息了下，准备开始写T2/T3，再仔细看下题。
        11:42 发现之前T3读错了题意（细节部分），贡献度并不传递。初步想法是有多与员工就往没员
    工的地方放，大概是从下往上做。T2嘛，01搜索出奇迹！10分到手。开始写T2。
        11:19 终于写完了T2好长好长的搜索，感觉有点不值，但也只能硬写完了，开始写T3。
        12:30 有了T3的想法，从上往下，把所有人都放进一个大根堆里，每次选取一个最大的作为贡献
    度，回溯的时候把此节点加进去的人删掉（但是实现的时候这个操作是后至的）。每个员工只会出入一
    次，每个节点遍历一次，总共m轮（感觉可能可以不独立，但我不会）。总复杂度O(m(n+k)logk)，
    （m=0时为O((n+k)logk))预期得分48，抓紧时间开写，只有大概20分钟。
    	12:57 写不完了...删除操作没有考虑，所以要扣所有含有2操作的分...T2坑我。
